openapi: 3.0.0
info:
  title: Feature flag API
  version: 1.0.0
  description: This is an API contract for feature flag service.
tags:
  - name: feature-flags
    description: APIs for creating, updating, and fetching feature flag data
  - name: feature-flag-user-mapping
    description: APIs for creating, updating, and fetching data about the mapping between feature flag IDs and user IDs
  
paths:
  /feature-flags:
    get:
      tags:
        - feature-flags
      summary: Get all feature flags
      description: Returns a list of all feature flags in the system
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/feature-flag-response'
        '404':
          description: No feature flags found.
    post:
      tags:
        - feature-flags
      summary: Creates a new feature flag
      description: Creates a new feature flag in the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/ApiRequests/feature-flag'
      responses:
        '201':
          description: Created feature flag sucessfully
        '400': 
          description: Check the request body passed name, description and userId are required
  /feature-flags/{flagId}:
    get:
      tags:
        - feature-flags
      summary: Get a feature flag by ID
      description: Returns a specific feature flag based on ID
      parameters:
        - name: flagId
          in: path
          required: true
          description: feature flag Id
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/feature-flag-response'
        '404':
          description: Feature Flag not found
    patch:
      tags:
        - feature-flags
      summary: Update a feature flag by ID
      description: Updates a specific feature flag based on ID
      parameters:
        - name: flagId
          in: path
          required: true
          description: ID of the feature flag
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/ApiRequests/feature-flag-update'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/feature-flag-response'
        '400':
          description: Check the request body passed status and userId are required.
        
          
  /users/{userId}/feature-flags:
    get:
      tags:
        - feature-flag-user-mapping
      summary: Get all feature flags for user
      parameters:
        - name: userId
          in: path
          required: true
          description: Id of user
          schema: 
            type: string
      responses:
        '200':
          $ref: '#/components/responses/get-all-user-feature-flag'
        '404':
          description: "Not found"
          content: 
            application/json:
              schema:
                type: string
                example: User feature flags not found
  /users/{userId}/feature-flag/{flagId}:
    get:
      tags:
        - feature-flag-user-mapping
      summary: Get feature flag for user
      description: Get if the flag is set for the user
      parameters:
        - name: userId
          in: path
          required: true
          description: Id of user
          schema: 
            type: string
        - name: flagId
          in: path
          required: true
          description: Id of the flag
          schema: 
            type: string
      responses:
        '200':
          $ref: '#/components/responses/get-user-feature-flag'
        '404':
          description: "Not found"
          content: 
            application/json:
              schema:
                type: string
                example: User feature flag not found
          
    post:
      tags:
        - feature-flag-user-mapping
      summary: To enable feature flag for a user
      parameters:
        - name: userId
          in: path
          required: true
          description: Id of user
          schema: 
            type: 
              string
        - name: flagId
          in: path
          required: true
          description: Id of the flag
          schema: 
            type: string
      requestBody:
        $ref: '#/components/requestBodies/user-feature-flag'
      responses:
        '200':
          $ref: '#/components/responses/create-user-feature-flag'
        '400':
          $ref: '#/components/responses/bad-request-user-feature-flag'
    patch:
      tags:
        - feature-flag-user-mapping
      summary: To update feature flag for a user
      parameters:
        - name: userId
          in: path
          required: true
          description: Id of user
          schema: 
            type: 
              string
        - name: flagId
          in: path
          required: true
          description: Id of the flag
          schema: 
            type: string
      requestBody:
        $ref: '#/components/requestBodies/user-feature-flag'

      responses:
        '200':
          $ref: '#/components/responses/update-user-feature-flag'
        '400':
          $ref: '#/components/responses/bad-request-user-feature-flag'
                 

components:
  schemas:
    user-feature-flag-response:
      type: object
      properties:
        userId:
            type: string
        flagId: 
          type: string
        status: 
          type: string
        createdAt: 
          type: number
        createdBy: 
          type: string
        updatedAt: 
          type: number
        upadtedBy: 
          type: string
    feature-flag-response:
      type: object
      properties:
        Id: 
          type: string
        Name:
          type: string
        Description:
          type: string
        Status: 
          type: string
    user-feature-flag-responses:
      type: array
      items:
        $ref: '#/components/schemas/user-feature-flag-response'
    status-validation-user-feature-flag:
      type: string
      example: Allowed values of Status are ENABLED, DISABLED
    request-validation-user-feature-flag:
      type: string
      example: Check the request body passed status and userId are required.

  requestBodies:
    user-feature-flag:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              userId:
                type: string
              status: 
                type: string
    create-feature-flag:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties: 
              Name: 
                type: string
              Description:
                type: string
              UserId: 
                type: string
            required:
              - Name
              - Description
              - UserId
    update-feature-flag:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties: 
              Status:
                type: string
              UserId:
                type: string
            required:
              - Status
              - UserId

  responses:
    update-user-feature-flag:
      description: "Updated successfully"
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/user-feature-flag-response'
    create-user-feature-flag:
      description: "Created successfully"
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/user-feature-flag-response'
    get-all-user-feature-flag:
      description: "Fetched successfully"
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/user-feature-flag-responses'
    get-user-feature-flag:
      description: "Fetched successfully"
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/user-feature-flag-response'
    bad-request-user-feature-flag:
      description: Bad request
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/request-validation-user-feature-flag'
              - $ref: '#/components/schemas/status-validation-user-feature-flag'
